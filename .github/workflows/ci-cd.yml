name: ci-cd

on: [push, pull_request]

jobs:
  ci:
    # Set up operating system
    runs-on: ubuntu-latest
    steps:
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
        
    - name: Check-out repository
      uses: actions/checkout@v2
      
    - name: Install poetry
      uses: snok/install-poetry@v1
      
    - name: Install package
      run: poetry install

    - name: Test with pytest
      run: poetry run pytest tests/ --cov=pycounts_tat --cov-report=xml

    - name: Use Codecov to track coverage
      uses: codecov/codecov-action@v2
      with:
        files: ./coverage.xml   # coverage report
        fail_ci_if_error: true  # terminate workflow if there's an error
 
    - name: Build documentation
      run: poetry run make html --directory docs/
      
  cd:
    # Only run this job if the "ci" job passes
    needs: ci
    
    # Only run this job if new work is pushed to "main"
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    # Set up operating system
    runs-on: ubuntu-latest
    
    steps:
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Check-out repository so we can access its contents
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    
    - name: Install poetry
      uses: snok/install-poetry@v1

    - name: Install package
      run: poetry install
    
    - name: Disable admin branch protection
      uses: benjefferies/branch-protection-bot@master
      if: always()
      with:
          access_token: ${{ secrets.ACCESS_TOKEN }}
          branch: main
          enforce_admins: false
    
    - name: Python Semantic Release
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
          pip install python-semantic-release
          git config user.name github-actions
          git config user.email github-actions@github.com
          poetry run semantic-release publish
          
    - name: Enable admin branch protection
      uses: benjefferies/branch-protection-bot@master
      if: always()  # Force to always run this step to ensure "include administrators" is always turned back on
      with:
        access_token: ${{ secrets.ACCESS_TOKEN }}
        branch: main
        enforce_admins: true
          
    - name: Publish to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/
        skip_existing: true
        
    - name: Test install from TestPyPI
      run: |
          pip install \
          --index-url https://test.pypi.org/simple/ \
          --extra-index-url https://pypi.org/simple \
          pycounts_tat
          
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        skip_existing: true
